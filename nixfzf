#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
	echo 'A faster way to go through nixpkgs & install them,browse nixos options & home-manager options,
Usage: nixfzf [options] package/option

Options:
 -o		show nixos options
 -m		show home-manager options
 -n		show nixpkgs(default)
 -u -o		update nixos options
 -u -m		update home-manager options
 -u -n		update nixpkgs
 -h		help
'
	exit
fi

command -v jq >/dev/null 2>&1 || command -v bat >/dev/null 2>&1 || {
	echo >&2 "You need jq and bat!"
	exit
}

[[ -z "${XDG_CACHE_HOME}" ]] && XDG_CACHE_HOME=~/.cache

[[ $1 == "-u" ]] && {
	shift
	[[ $1 == "-n" || ! -e $XDG_CACHE_HOME/nixfzf ]] && {
		echo "Caching nixpkgs..."
		nix-env -qa --json | jq --raw-output 'keys | .[]' | cut -d. -f 2- | sort | uniq >$XDG_CACHE_HOME/nixfzf
	}
	[[ $1 == "-o" || ! -e $XDG_CACHE_HOME/nixfzf-options ]] && {
		echo "Caching nixos options..."
		options="$(NIXPKGS_ALLOW_UNFREE=1 nix-build -Q --no-out-link '<nixpkgs/nixos/release.nix>' -A options)/share/doc/nixos/options.json"
		cp "$options" $XDG_CACHE_HOME/nixfzf-options
	}
	[[ $1 == "-m" || ! -e $XDG_CACHE_HOME/nixfzf-options ]] && {
		echo "Caching home-manager options..."
		options_url="https://raw.githubusercontent.com/mipmip/home-manager-option-search/main/data/options.json"
		curl -s "$options_url" | jq '.options' | sed 's/&lt;/</g;s/&gt;/>/g' > $XDG_CACHE_HOME/hm-options
	}
	exit
}

# choose cli processor for options preview
[[ $1 == "-m"  ]] || [[ $1 == "-o" ]] && {
	if command yq --prettyPrint >/dev/null 2>&1; then
	        # using yq-go
		processor() { yq -P "$1"; }
	elif command -v gojq >/dev/null 2>&1; then
		# using gojq
		processor() { gojq "$1" --yaml-output; }
	elif command -v yq >/dev/null 2>&1; then
		# processor() { yq "$1" --yaml-output; }
		#
		# yq (python) is too slow for nixos options and it also
		# doesn't play nicely with formatting
		echo >&2 "You are using yq (kislyuk) which is too slow"
		echo >&2 "and doesn't play nicely with formatting."
		echo >&2 ""
		echo >&2 "Please use either yq (mikefarah) or gojq"
	else
		echo >&2 "You need yq, or gojq for options preview"
		exit
	fi
}

# show home-manager options
[[ $1 == "-m" ]] && {
	shift
	jq '.[].title' -r $XDG_CACHE_HOME/hm-options >/tmp/hm-options
	printArg() {
		view=$(cat $XDG_CACHE_HOME/hm-options \
			| processor ".[] | select(.title==\"$1\")" \
			| bat --language=yaml --style=numbers --color=always)
		echo "$view"
	}
	# as exporting funtion doesn't work in zsh and fzf use $SHELL by defualt
	SHELL=bash
	export -f processor
	export -f printArg
	cat /tmp/hm-options | fzf -q "$1" -e -m \
		--preview="printArg {1}" \
		--preview-window=up,wrap,wrap,border-horizontal \
		--layout=reverse \
		--info=hidden \
		--ansi \
		--margin="2%,1%,2%,1%" \
		--cycle
	exit
}
# show options
[[ $1 == "-o" ]] && {
	shift
	jq 'keys | .[]' -r $XDG_CACHE_HOME/nixfzf-options | tail -n +2 >/tmp/options
	printArg() {
		view=$(cat $XDG_CACHE_HOME/nixfzf-options \
			| processor ".\"$1\"" \
			| bat --language=yaml --style=numbers --color=always)
		echo "$view"
	}
	SHELL=/usr/bin/bash
	export -f processor
	export -f printArg
	cat /tmp/options | fzf -q "$1" -e -m \
		--preview "printArg {1}" \
		--preview-window=up,wrap,wrap,border-horizontal \
		--layout=reverse \
		--info=hidden \
		--ansi \
		--margin="2%,1%,2%,1%" \
		--cycle

	exit
} || {
	[[ $1 == "-n" ]] && shift
	cat $XDG_CACHE_HOME/nixfzf | awk '{print $0" \033[32m*\033[0m"}' >/tmp/packages
	# wanna use flake instead ?
	# nix search nixpkgs --json | jq --raw-output 'keys | .[]' | cut -d. -f 3- | awk '{print $0" \033[32m*\033[0m"}' >/tmp/packages
	echo "$(
		echo -e ' Select packages to install\n (use TAB to toggle selection)'
		cat /tmp/packages
	)" >/tmp/packages
	cat /tmp/packages | fzf -q "$1" -e -m \
		--preview='bat --style=numbers --color=always --line-range :500 $(nix eval --raw nixpkgs#{1}.meta.position | cut -d: -f1)' \
		--preview-window=65%:wrap \
		--layout=reverse \
		--marker='>>' \
		--header-lines=2 \
		--info=hidden \
		--ansi \
		--margin="2%,1%,2%,1%" \
		--cycle | sed -e 's/[[:space:]]\*$//' | xargs -roIX nix-env -iA nixpkgs.X
}

# if you want to open it in your editor of choice
# --bind='ctrl-l:execute(EDITOR=emacsclient nix edit nixpkgs#{1})' \

# Shift+up/down is the default for scrolling
# --bind Alt-k:preview-up,Alt-j:preview-down
